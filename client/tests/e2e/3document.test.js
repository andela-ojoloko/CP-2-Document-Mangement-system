const config = require('../../../nightwatch.conf.js');
const faker = require('faker');

const documentTitle1 = faker.lorem.words();
const documentTitle2 = faker.lorem.words();

module.exports = {
  'Document tests': function (browser) {
    browser
      .url('http://localhost:7000/#/login')
      .waitForElementVisible('body')
       .waitForElementVisible('#loginForm', 5000)
       .setValue('input[name=email]', 'mure@gmil.com')
       .setValue('input[name=password]', 'users')
       .click('button[type=submit]')
       .waitForElementNotPresent('.loginForm', 10000)
       .waitForElementPresent('nav', 1000)
       .waitForElementVisible('.toast-success', '.toast-message')
       .assert.containsText('.toast-message', 'Login successfully')
       .pause(1000)
       .assert.urlEquals('http://localhost:7000/#/dashboard')
       .click('#createdocument')
       .waitForElementVisible('form', 5000)
       .assert.urlEquals('http://localhost:7000/#/dashboard/createdocument')
       .waitForElementVisible('iframe', 2000)
       .click('button[type=submit]')
       .waitForElementVisible('.toast-error', '.toast-message')
       .assert.containsText('.toast-message', 'please enter a title')
       .pause(1000)
       .setValue('input[name=title]', documentTitle1)
       .click('button[type=submit]')
       .waitForElementVisible('.toast-error', '.toast-message')
       .assert.containsText('.toast-message', 'please select an access')
       .setValue('select[name=access]', 'public')
       .click('button[type=submit]')
       .waitForElementVisible('.toast-error', '.toast-message')
       .assert.containsText('.toast-message', 'please enter content')
       .frame(0)
       .setValue('.mce-content-body', faker.lorem.paragraphs())
       .frame(null)
       .click('button[type=submit]')
       .pause(1000)
       .waitForElementVisible('.document-list', 3000)
       .assert.urlEquals('http://localhost:7000/#/dashboard')
       .click('#createdocument')
       .waitForElementVisible('form', 5000)
       .waitForElementVisible('iframe', 2000)
       .setValue('input[name=title]', documentTitle2)
       .click('select[name=access] option[value=role]')
       .frame(0)
       .setValue('.mce-content-body', faker.lorem.paragraphs())
       .frame(null)
       .click('button[type=submit]')
       .waitForElementVisible('.document-list', 3000)
       .pause(1000)
       .waitForElementVisible('.document-list', 2000)
       .click('.document-list:nth-child(1) div div .card-action .view-document')
       .assert.urlContains('http://localhost:7000/#/dashboard/viewdocuments/')
       .waitForElementNotPresent('.toast-success', '.toast-message')
       .click('a.btn')
       .waitForElementVisible('form', 3000)
       .assert.urlContains('http://localhost:7000/#/dashboard/editdocuments/')
       .clearValue('input[name=title]')
       .setValue('input[name=title]', 'ChangeTitle')
       .frame(0)
       .clearValue('.mce-content-body')
       .setValue('.mce-content-body', faker.lorem.paragraphs())
       .frame(null)
       .click('button[type=submit]')
       .waitForElementVisible('.toast-success', '.toast-message')
       .assert.containsText('.toast-message', 'document update success')
       .pause(1000)
       .waitForElementVisible('.document-list', 2000)
       .click('.document-list:nth-child(1) div div .card-action .view-document')
       .waitForElementVisible('.innerhtml', 2000)
       .assert.containsText('.doc-title', 'ChangeTitle')
       .click('#my-documents')
       .waitForElementNotPresent('.progress')
       .pause(1000)
       .click(`.document-list:nth-child(1) div div
       .card-action .delete-document`)
       .pause(1000)
       .click('button.cancel')
       .pause(1000)
       .click('button.confirm')
       .pause(1000)
       .click(`.document-list:nth-child(1) div div 
       .card-action .delete-document`)
       .pause(1000)
       .click('button.confirm')
       .pause(1000)
       .click('#general-documents')
       .pause(1000)
       .click('select[name=access] option[value=public]')
       .assert.urlEquals('http://localhost:7000/#/dashboard'
       + '/generalDocuments?query=&page=1&access=public')
       .click('select[name=access] option[value=role]')
       .waitForElementNotPresent('.progress')
       .pause(1000)
       .assert.urlEquals('http://localhost:7000/#/dashboard'
       + '/generalDocuments?query=&page=1&access=role')
       .click('select[name=access] option[value=all]')
       .pause(1000)
       .waitForElementNotPresent('.progress')
       .assert.urlEquals('http://localhost:7000/#/dashboard'
       + '/generalDocuments?query=&page=1&access=all')
       .waitForElementNotPresent('.progress')
       .click('li.next')
       .waitForElementNotPresent('.progress')
       .click('li.next')
       .pause(1000)
       .assert.urlEquals('http://localhost:7000/#/dashboard'
       + '/generalDocuments?query=&page=3&access=all')
       .click('li.previous')
       .pause(1000)
       .assert.urlEquals('http://localhost:7000/#/dashboard'
       + '/generalDocuments?query=&page=2&access=all')
       .click('#general-documents')
       .waitForElementVisible('input[name=query]', 2000)
       .setValue('input[name=query]', [documentTitle1, browser.Keys.ENTER])
       .assert.containsText(`.document-list:nth-child(1) div div
        .card-content .card-title`,
        documentTitle1)
        .pause(1000)
       .clearValue('input[name=query]')
       .setValue('input[name=query]', ['xuhjigtp[]', browser.Keys.ENTER])
       .waitForElementNotPresent('.progress')
       .assert.containsText('.no-documents', 'No documents found')
       .pause(1000)
       .click('.logout')
       .assert.urlEquals('http://localhost:7000/#/login')
        .pause(1000)
      .end();
  }
};
